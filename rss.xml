<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>张华宁的笔记本</title>
        <description>张华宁的笔记本 - 张华宁</description>
        <link>http://izhanghuaning.github.io</link>
        <link>http://izhanghuaning.github.io</link>
        <lastBuildDate>2014-03-06T10:54:37+08:00</lastBuildDate>
        <pubDate>2014-03-06T10:54:37+08:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>JSDG Chap2 types values variables</title>
                <description></description>
                <link>http://izhanghuaning.github.io/books/2011/05/05/jsdg-chap2-types-values-variables.html</link>
                <guid>http://izhanghuaning.github.io/books/2011/05/05/jsdg-chap2-types-values-variables</guid>
                <pubDate>2011-05-05T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>BW编程之javascript概述篇(一)</title>
                <description>&lt;h4 id=&quot;white&quot;&gt;White：我是一个编程菜鸟，我想学习点关于编程的知识，从什么语言入手比较好？&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Black:&lt;/em&gt; 俗话说“信心要比黄金更可贵”。学习一种编程语言最终要的是它能让你喜欢它，并且有信心能掌握它，使用它。怎么样提高信心呢？首先是入手快，其次所见即所得。这样才能不停的取得成就感和满足感，提升更大的信心。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;入手快：&lt;/em&gt; JavaScript只要有浏览器（IE8以上、Chrome、FireFox等）就可以学习，不需要安装任何IDE。javascript语法简单，是弱类型语言，不需要记住很多语法知识，上手速度快。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;所见即所得：&lt;/em&gt; javascript是解释性语言，不需要经过编译即可直接运行。代码可以执行在console执行看到结果。对Dom（文档对象模型，简单来说就是网页）的操作也是即时呈现。&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id=&quot;whitejavascript&quot;&gt;White：为什么要学习javascript,它的使用场景广泛么?&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Black:&lt;/em&gt; javascript可以说是世界上使用最多的编程语言，每个网页几乎都在使用它。随着互联网的发展，大量的网站已经由静态web网页发展到了web应用，web应用需要处理大量的用户交互，这就离不开javascript的支持。&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id=&quot;whitejavascript_2&quot;&gt;White:简单介绍一下javascript吧&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Black:&lt;/em&gt; 好的，javascript其实主要包含几个部分：javascript语言核心(ECMAScript),客户端javascript（宿主浏览器），服务端javascript（node.js)。我们j接下来只关心前面2个部分，因为node.js我也没多少使用经验。&lt;/p&gt;

&lt;p&gt;简单来说javascript就是一种高端的、动态的、弱类型的编程语言，非常适合面向对象和函数式的编程风格。javascript的语法来自java，它的一等函数来自语scheme(一种lisp方言)，基于原型的继承来自self。我们不需要了解上面的java、scheme、self语言，因为我也不知道。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;特别声明:javascript和java没有任何关系，除了名字和语法有点相似，买书的时候千万不要买java的书来学习javascript。&lt;/strong&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id=&quot;whitejavascript_3&quot;&gt;White:既然谈到javascript书籍，有哪写书值得购买呢？&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Black:&lt;/em&gt; 好的，推荐这些书籍主要是为了你能够用最少的精力和金钱得到更多的知识和技能，没有任何广告和商业成分，并且这些书都是我购买并且仔细阅读过的。&lt;/p&gt;

&lt;p&gt;基础级：JavaScript权威指南、JavaScript高级程序设计&lt;/p&gt;

&lt;p&gt;进阶级：JavaScript语言精粹、基于MVC的Javacript Web富应用开发、Javacript模式、编写可维护的JavaScript（这本暂时没看完）&lt;/p&gt;

&lt;p&gt;上面几本书看完基本对于javascript也有了一定认识了，完全可以自己去探索更多javascript的美丽世界了。好书可以多读几遍，可以有更多的收获。&lt;/p&gt;
&lt;hr /&gt;
&lt;h4 id=&quot;whitejavascript_4&quot;&gt;White:你为什么会写这些博客，并且javascript系列会涉及到哪些内容呢？&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Black:&lt;/em&gt;这些年看过很多书，也看过很多其他人的博客，加深了对很多知识和技术的掌握。很多时候在看书或者看博客的时候有一些感悟，但是过一点时间不去深入研究就忘记了，所以希望能够有个笔记本来记录自己在学习技术过程中的点点滴滴。最好也能够对其他偶尔来到这里的人有所帮助，共享、免费，提倡自由、平等是每个程序员的追求。&lt;/p&gt;

&lt;p&gt;至于javascript的内容是基于上面那些书籍和一些博客的内容加上自己的一些理解，基本算是想到哪里说到哪里，可能会比较杂，但是还是尽量按照从基础到进阶的过程来组织。&lt;/p&gt;</description>
                <link>http://izhanghuaning.github.io/books/2011/05/01/jsdg-chap1-introduction.html</link>
                <guid>http://izhanghuaning.github.io/books/2011/05/01/jsdg-chap1-introduction</guid>
                <pubDate>2011-05-01T00:00:00+08:00</pubDate>
        </item>


</channel>
</rss>
